
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Xml;
using static System.Net.Mime.MediaTypeNames;
using static H;

class H
{
    public class edge
    {
        public int s;
        public string point1;
        public string point2;
        public int used;

        public edge()
        {
            Console.WriteLine("Введите вершину ребра");
            this.point1 = Console.ReadLine();
            Console.WriteLine("Введите вершину ребра");
            this.point2 = Console.ReadLine();
            Console.WriteLine("Введите длину ребра");
            this.s = Convert.ToInt32(Console.ReadLine());
            this.used = 0;
        }

        public void Print()
        {
            Console.WriteLine("{0},{1} =  {2}", this.point1, this.point2, this.s);
        }
    }
     
    static int IsPresent(string[] p, string name)
    {
        for (int i = 0; i < p.Length; i++)
        {
            if (p[i] == name)
            {
                return 1;
            }
        }
        return 0;
    }

    static int chose(edge[] s, string[] p)
    {
        int min = int.MaxValue;
        int ind=0;
        for (int i = 0; i < s.Length; i++)
        {
            if (s[i].used==0)
            {
                if (((IsPresent(p, s[i].point1)==1) && (IsPresent(p, s[i].point2) == 0)) || ((IsPresent(p, s[i].point1) == 0) && (IsPresent(p, s[i].point2) == 1)))
                {
                    if (min > s[i].s)
                    {
                        min = s[i].s;
                        ind = i;
                    }
                }
            }
        }
        return ind;
    }

    // Добавляем вершины в массив точек
    static void AddPoint(ref string[] p, edge h, ref int pointindex)
    {
        int g = 0;
        for (int i=0; i < pointindex; i++)
        {
            if (h.point1 == p[i])
            {
                g = 1;
                break;
            }
        }
        if (g==0)
        {
            p[pointindex++] = h.point1;
        }
        else
        {
            p[pointindex++] = h.point2;
        }
    }

    static void Main()
    {
        // Ввод данных
        int S = 0;
        string way = "";
        Console.WriteLine("Введите общее кол-во точек");
        int t = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Введите кол-во ребер");
        int a = Convert.ToInt32(Console.ReadLine());

        string[] point = new string[t];
        int pointindex = 1;

        edge[] mas = new edge[a];
        for (int i = 0; i < a; i++)
        {
            mas[i] = new edge();
        }
        
        // Выбираем первую точку
        point[0] = mas[0].point1;

        // Перебираем все грани
        for (int i = 1; i < t; i++)
        {
            int j = chose(mas, point);
            way += mas[j].point1 + mas[j].point2+" ";
            S += mas[j].s;
            mas[j].used = 1;
            AddPoint(ref point, mas[j], ref pointindex);
        }
        Console.WriteLine(S); 
        Console.WriteLine(way);
    }

}







